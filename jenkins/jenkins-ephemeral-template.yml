---
apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: jenkins
  template: jenkins-ephemeral-template
message: A Jenkins service has been created in your project.  Log into Jenkins with
  your OpenShift account.  The tutorial at https://github.com/openshift/origin/blob/master/examples/jenkins/README.md
  contains more information about using this template.
metadata:
  annotations:
    description: |-
      Jenkins service, WITHOUT persistent storage.
    iconClass: icon-jenkins
    openshift.io/display-name: Jenkins (Ephemeral)
    openshift.io/documentation-url: https://docs.okd.io/latest/using_images/other_images/jenkins.html
    openshift.io/long-description: This template deploys a Jenkins server capable
      of managing OpenShift Pipeline builds and supporting OpenShift-based oauth login.
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
    samples.operator.openshift.io/version: 4.1.0
    tags: instant-app,jenkins
  labels:
    samples.operator.openshift.io/managed: "true"
  name: jenkins-ephemeral
objects:
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      annotations:
        haproxy.router.openshift.io/timeout: 4m
        template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
      name: ${JENKINS_SERVICE_NAME}
    spec:
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${JENKINS_SERVICE_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${JENKINS_SERVICE_NAME}
    labels:
      app: ${JENKINS_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${JENKINS_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${JENKINS_SERVICE_NAME}
        spec:
          containers:
            - capabilities: {}
              env:
                - name: OPENSHIFT_ENABLE_OAUTH
                  value: ${ENABLE_OAUTH}
                - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
                  value: "true"
                - name: OPENSHIFT_JENKINS_JVM_ARCH
                  value: ${JVM_ARCH}
                - name: DISABLE_ADMINISTRATIVE_MONITORS
                  value: ${DISABLE_ADMINISTRATIVE_MONITORS}
                - name: KUBERNETES_MASTER
                  value: https://kubernetes.default:443
                - name: KUBERNETES_TRUST_CERTIFICATES
                  value: "true"
                - name: JENKINS_SERVICE_NAME
                  value: ${JENKINS_SERVICE_NAME}
                - name: JNLP_SERVICE_NAME
                  value: ${JNLP_SERVICE_NAME}
                - name: ENABLE_FATAL_ERROR_LOG_FILE
                  value: ${ENABLE_FATAL_ERROR_LOG_FILE}
                - name: JENKINS_OPTS
                  value: ${JENKINS_OPTS}
                - name: SLACK_BASE_URL
                  value: ${SLACK_BASE_URL}
                - name: SLACK_ROOM
                  value: ${SLACK_ROOM}
                - name: SLACK_TEAM
                  value: ${SLACK_TEAM}
                - name: SLACK_TOKEN_CREDENTIAL_ID
                  value: ${SLACK_TOKEN_CREDENTIAL_ID}
                - name: SHARED_LIB_REPO
                  value: ${SHARED_LIB_REPO}
                - name: SHARED_LIB_NAME
                  value: ${SHARED_LIB_NAME}
                - name: SHARED_LIB_REF
                  value: ${SHARED_LIB_REF}
                - name: SHARED_LIB_SECRET
                  value: ${SHARED_LIB_SECRET}
                - name: GITLAB_HOST
                  value: ${GITLAB_HOST}
                - name: GITLAB_TOKEN
                  value: ${GITLAB_TOKEN}
                - name: GITLAB_GROUP_NAME
                  value: ${GITLAB_GROUP_NAME}
              image: ' '
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 2
                httpGet:
                  path: /login
                  port: 8080
                initialDelaySeconds: 420
                periodSeconds: 360
                timeoutSeconds: 240
              name: jenkins
              readinessProbe:
                httpGet:
                  path: /login
                  port: 8080
                initialDelaySeconds: 3
                timeoutSeconds: 240
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              securityContext:
                capabilities: {}
                privileged: false
              terminationMessagePath: /dev/termination-log
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          serviceAccountName: ${JENKINS_SERVICE_NAME}
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - jenkins
            from:
              kind: ImageStreamTag
              name: ${JENKINS_IMAGE_STREAM_TAG}
              namespace: ${NAMESPACE}
            lastTriggeredImage: ""
          type: ImageChange
        - type: ConfigChange
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      annotations:
        serviceaccounts.openshift.io/oauth-redirectreference.jenkins: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"${JENKINS_SERVICE_NAME}"}}'
      name: ${JENKINS_SERVICE_NAME}
  - apiVersion: rbac.authorization.k8s.io/v1
    groupNames: null
    kind: RoleBinding
    metadata:
      name: ${JENKINS_SERVICE_NAME}_edit
    roleRef:
      name: edit
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
    subjects:
      - kind: ServiceAccount
        name: ${JENKINS_SERVICE_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${JNLP_SERVICE_NAME}
    spec:
      ports:
        - name: agent
          nodePort: 0
          port: 50000
          protocol: TCP
          targetPort: 50000
      selector:
        name: ${JENKINS_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        service.alpha.openshift.io/dependencies: '[{"name": "${JNLP_SERVICE_NAME}",
        "namespace": "", "kind": "Service"}]'
        service.openshift.io/infrastructure: "true"
      name: ${JENKINS_SERVICE_NAME}
    spec:
      ports:
        - name: web
          nodePort: 0
          port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        name: ${JENKINS_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
parameters:
  - description: The name of the OpenShift Service exposed for the Jenkins container.
    displayName: Jenkins Service Name
    name: JENKINS_SERVICE_NAME
    value: jenkins
  - description: The name of the service used for master/slave communication.
    displayName: Jenkins JNLP Service Name
    name: JNLP_SERVICE_NAME
    value: jenkins-jnlp
  - description: Whether to enable OAuth OpenShift integration. If false, the static
      account 'admin' will be initialized with the password 'password'.
    displayName: Enable OAuth in Jenkins
    name: ENABLE_OAUTH
    value: "true"
  - description: Whether Jenkins runs with a 32 bit (i386) or 64 bit (x86_64) JVM.
    displayName: Jenkins JVM Architecture
    name: JVM_ARCH
    value: i386
  - description: Maximum amount of cpu the container can use.
    displayName: Cpu Limit
    name: CPU_LIMIT
    value: "1"
  - description: Starting request of cpu the container can use.
    displayName: Cpu Request
    name: CPU_REQUEST
    value: 500m
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    value: 2Gi
  - description: Starting request of memory the container can use.
    displayName: Memory Request
    name: MEMORY_REQUEST
    value: 512Mi
  - description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - description: The OpenShift Namespace where the Jenkins ImageStream resides.
    displayName: Jenkins ImageStream Namespace
    name: NAMESPACE
    value: openshift
  - description: Whether to perform memory intensive, possibly slow, synchronization
      with the Jenkins Update Center on start.  If true, the Jenkins core update monitor
      and site warnings monitor are disabled.
    displayName: Disable memory intensive administrative monitors
    name: DISABLE_ADMINISTRATIVE_MONITORS
    value: "false"
  - description: Name of the ImageStreamTag to be used for the Jenkins image.
    displayName: Jenkins ImageStreamTag
    name: JENKINS_IMAGE_STREAM_TAG
    value: jenkins:latest
  - description: When a fatal error occurs, an error log is created with information
      and the state obtained at the time of the fatal error.
    displayName: Fatal Error Log File
    name: ENABLE_FATAL_ERROR_LOG_FILE
    value: "false"
  - description: Jenkins Arguments
    displayName: Jenkins Arguments
    name: JENKINS_OPTS
    value: --sessionTimeout=0
  - description: The integration point with slack
    displayName: Slack Base URL
    name: SLACK_BASE_URL
  - description: The default slack team
    displayName: Default Slack Team
    name: SLACK_TEAM
  - description: The default slack channel
    displayName: Default Slack Channel
    name: SLACK_ROOM
  - description: Slack Token
    displayName: The id of a secret that is sync'd to Jenkins that contains the token in secrettext
    name: SLACK_TOKEN_CREDENTIAL_ID
  - description: Jenkins Shared Library Repository URL
    displayName: Jenkins Shared Library Repo URL
    name: SHARED_LIB_REPO
  - description: Jenkins Shared Library Secret for Repository
    displayName: Jenkins Shared Library Secret for Repository
    name: SHARED_LIB_SECRET
  - description: Jenkins Shared Library Ref
    displayName: Jenkins Shared Library Ref
    name: SHARED_LIB_REF
  - description: Jenkins Shared Library Name
    displayName: Jenkins Shared Library Name
    name: SHARED_LIB_NAME
  - description: Http address of the GitLab Project
    displayName: Http address of the GitLab Project
    name: GITLAB_HOST
  - description: GitLab API token to access repos and projects
    displayName: GitLab API token to access repos and projects
    name: GITLAB_TOKEN
  - description: GitLab group name where projects are stored
    displayName: GitLab group name where projects are stored
    name: GITLAB_GROUP_NAME
    value: rht-labs
