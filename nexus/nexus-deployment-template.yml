---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: nexus
  annotations:
    openshift.io/display-name: Nexus Persistent Template
    description: Creates a Nexus with configuration and artifacts stored in a persistent
      volume.
    iconClass: icon-nexus
    tags: instant-app
  labels:
    app: nexus
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      name: "${NAME}"
      app: "${NAME}"
    name: "${NAME}"
  spec:
    tags:
    - annotations:
        openshift.io/imported-from: "${CONTAINER_IMAGE}"
      from:
        kind: DockerImage
        name: "${CONTAINER_IMAGE}"
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: "${NAME}"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "${VOLUME_CAPACITY}"
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: "${NAME}"
    labels:
      app: "${NAME}"
  spec:
    replicas: 1
    selector:
      name: "${NAME}"
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: "${NAME}"
      spec:
        containers:
        - image: "${NAME}"
          imagePullPolicy: Always
          name: "${NAME}"
          readinessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 20
          livenessProbe:
            failureThreshold: 30
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 420
            timeoutSeconds: 3
          ports:
          - containerPort: 8081
            protocol: TCP
          resources:
            limit:
              memory: ${MEMORY_LIMIT}
            requests:
              memory: 256Mi
          terminationMessagePath: "/dev/termination-log"
          volumeMounts:
          - mountPath: "/nexus-data"
            name: "${NAME}"
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext:
          capabilities: {}
          privileged: false
        terminationGracePeriodSeconds: 30
        volumes:
        - persistentVolumeClaim:
            claimName: "${NAME}"
          name: "${NAME}"
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - "${NAME}"
        from:
          kind: ImageStreamTag
          name: "${NAME}:latest"
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: "${NAME}"
      app: "${NAME}"
    name: "${NAME}"
  spec:
    ports:
    - port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      name: "${NAME}"
    sessionAffinity: None
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      name: "${NAME}"
      app: "${NAME}"
    name: "${NAME}"
  spec:
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    port:
      targetPort: 8081
    to:
      kind: Service
      name: "${NAME}"
      weight: 100
    wildcardPolicy: None
parameters:
- name: NAME
  displayName: Name
  description: The name assigned to all objects and the resulting imagestream.
  required: true
  value: nexus
- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 1Gi
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  value: 1Gi
- description: The Container Image to use for the ImageStream
  displayName: Nexus Container Image
  name: CONTAINER_IMAGE
  value: sonatype/nexus3:3.7.1
labels:
  template: nexus-persistent-template
